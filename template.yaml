# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Infrastructure for private-notes project

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform: AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  PrivateNotesApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: api
      Cors:
        AllowHeaders: "'*'"
        AllowMethods: "'POST,GET,PUT,DELETE,OPTIONS'"
        AllowOrigin: "'*'"
      Auth:
        AddDefaultAuthorizerToCorsPreflight: False
        ApiKeyRequired: True

  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  listCollections:
    Type: AWS::Serverless::Function
    Properties:
      Handler: list-collections.listCollections
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        GetCollection:
          Type: Api
          Properties:
            RestApiId: !Ref PrivateNotesApi
            Path: /collections
            Method: GET
            Auth:
              ApiKeyRequired: True

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Format: cjs
        Minify: false
        Sourcemap: true
        EntryPoints:
          - src/handlers/list-collections.ts

  createCollection:
    Type: AWS::Serverless::Function
    Properties:
      Handler: create-collection.createCollection
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PrivateNotesApi
            Path: /collections
            Method: POST
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Format: cjs
        Minify: false
        Sourcemap: true
        EntryPoints:
          - src/handlers/create-collection.ts

  updateCollection:
    Type: AWS::Serverless::Function
    Properties:
      Handler: update-collection.updateCollection
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PrivateNotesApi
            Path: /collections
            Method: PUT
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Format: cjs
        Minify: false
        Sourcemap: true
        EntryPoints:
          - src/handlers/update-collection.ts

  getCollection:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get-collection.getCollection
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PrivateNotesApi
            Path: /collections/{collectionId}
            Method: GET
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Format: cjs
        Minify: false
        Sourcemap: true
        EntryPoints:
          - src/handlers/get-collection.ts

  deleteCollection:
    Type: AWS::Serverless::Function
    Properties:
      Handler: delete-collection.deleteCollection
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PrivateNotesApi
            Path: /collections/{collectionId}
            Method: DELETE
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Format: cjs
        Minify: false
        Sourcemap: true
        EntryPoints:
          - src/handlers/delete-collection.ts

  # Simple syntax to create a DynamoDB table with a single attribute primary key, more in
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable

  # DynamoDB table to store item: {id: &lt;ID&gt;, name: &lt;NAME&gt;}
  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
  WebEndpoint:
    Description: 'API Gateway endpoint URL for Prod stage'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/api/'
